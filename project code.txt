include <ESP8266WiFi.h>
#include <Firebase_ESP_Client.h>
#include "addons/TokenHelper.h"
#include "addons/RTDBHelper.h"
#include "DHT.h"
#include <U8g2lib.h>

U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);  

int PulseSensorPurplePin = A0; // Pulse Sensor PURPLE WIRE connected to ANALOG PIN 0
int LED13 = D0;
int Signal;
int Threshold = 770; // Determine which Signal to "count as a beat", and which to ignore.

#define DHTPIN1 D6 // what pin we're connected to
#define DHTTYPE DHT11 // DHT 11
DHT dht1(DHTPIN1, DHTTYPE);

#define WIFI_SSID "123456789"
#define WIFI_PASSWORD "123456789"    
#define API_KEY "AIzaSyCt_DVJB7W8VSSwmPKIFfS5_IaogaAeyVM"
#define DATABASE_URL "https://hear-beat-project-default-rtdb.firebaseio.com/"

FirebaseData fbdo;
FirebaseAuth auth;
FirebaseConfig config;
unsigned long sendDataPrevMillis = 0;
bool signupOK = false;

void setup() {
  u8g2.begin();
  u8g2.clearBuffer();
  u8g2.setFont(u8g2_font_ncenB08_tr);
  u8g2.setFontRefHeightExtendedText();
  u8g2.setDrawColor(1);

  pinMode(LED13, OUTPUT); // pin that will blink to your heartbeat!

  Serial.begin(115200);
  Serial.println();
  Serial.println("DHTxx test!");
  dht1.begin();
  pinMode(LED13, OUTPUT);

  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED)
  {
    Serial.print(".");
    delay(300);
  }
  Serial.println();
  Serial.print("Connected with IP: ");
  Serial.println(WiFi.localIP());
  Serial.println();
  config.api_key = API_KEY;
  config.database_url = DATABASE_URL;
  if (Firebase.signUp(&config, &auth, "", ""))
  {
    Serial.println("ok");
    signupOK = true;
  }
  else
  {
    Serial.printf("%s\n", config.signer.signupError.message.c_str());
  }
  config.token_status_callback = tokenStatusCallback; //see addons/TokenHelper.h
  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);
}

void loop()
{
  Signal = analogRead(PulseSensorPurplePin);
  Serial.println(Signal);

  Serial.print("Humidity1 =");
  Serial.print(dht1.readHumidity());
  Serial.println(" %");

  Serial.print("Temperature1, ");
  Serial.print(dht1.readTemperature());
  Serial.println(" c");

  // Display data on OLED
  u8g2.clearBuffer();
  u8g2.setCursor(0, 15);
  u8g2.print("Pulse: ");
  u8g2.print(Signal);

  u8g2.setCursor(0, 30);
  u8g2.print("Humidity: ");
  u8g2.print(dht1.readHumidity());
  u8g2.print(" %");

  u8g2.setCursor(0, 45);
  u8g2.print("Temperature: ");
  u8g2.print(dht1.readTemperature());
  u8g2.print(" C");

  u8g2.sendBuffer();

  if (Signal > Threshold)
  {
    digitalWrite(LED13, LOW);
  }
  else
  {
    digitalWrite(LED13, HIGH);
  }

  if (Firebase.ready() && signupOK && (millis() - sendDataPrevMillis > 1000 || sendDataPrevMillis == 0))
  {
    sendDataPrevMillis = millis();

    if (Firebase.RTDB.setInt(&fbdo, "main/Pulse", Signal))
    {
      Serial.println("PATH: " + fbdo.dataPath());
      Serial.println("TYPE: " + fbdo.dataType());
    }
    else
    {
      Serial.println("Failed REASON: " + fbdo.errorReason());
    }
    if (Firebase.RTDB.setInt(&fbdo, "main/Temperature1", dht1.readTemperature()))
    {
      Serial.println("PATH: " + fbdo.dataPath());
      Serial.println("TYPE: " + fbdo.dataType());
    }
    else
    {
      Serial.println("Failed REASON: " + fbdo.errorReason());
    }

    delay(1000)